name: Java Continuous Integration with Maven (GraalVM)

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up GraalVM JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21.0.5'
          distribution: 'graalvm'
          cache: maven

      - name: Run Clean, Package, Install
        run: |
          mvn clean package install -B
          if [ ! -f target/uml-editor.jar ]; then
            echo "Shaded JAR file 'uml-editor.jar' not found! Build failed."
            exit 1
          fi

      - name: Debug Build Output
        run: ls -l target/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shaded-jar
          path: target/uml-editor.jar

  release:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: shaded-jar

      - name: Debug Artifact Download
        run: ls -l .

      - name: Determine Release Type
        id: determine_release
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "release_type=release" >> $GITHUB_ENV
            echo "prerelease=false" >> $GITHUB_ENV
          else
            echo "release_type=pre-release" >> $GITHUB_ENV
            echo "prerelease=true" >> $GITHUB_ENV
          fi

      - name: Create Release
        id: create_release
        uses: actions/github-script@v6
        with:
          script: |
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v4.4.${{ github.run_number }}`,
              name: `UML Editor ${process.env.release_type}`,
              body: "Automatically generated release for UML Editor.",
              prerelease: process.env.prerelease === 'true',
              draft: false,
            });
            core.setOutput("upload_url", release.data.upload_url);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          release_type: ${{ env.release_type }}
          prerelease: ${{ env.prerelease }}

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: uml-editor.jar
          asset_name: uml-editor.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip Source Code
        run: zip -r source-code.zip .

      - name: Debug Source Code Zip
        run: ls -l

      - name: Upload Source Code
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./source-code.zip
          asset_name: source-code.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
