name: Java Continuous Integration with Maven (GraalVM)

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java-version: ['21.0.5']

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up GraalVM JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'graalvm'
          cache: maven

      - name: Verify Code Style with Spotless
        run: mvn spotless:check || echo "Spotless check failed. Please fix formatting."

      - name: Run Tests
        run: mvn test || echo "Tests failed but continuing..."

      - name: Run Clean and Package
        run: |
          mvn clean package -B
          echo "Renaming JAR for consistency..."
          cp target/*shaded.jar target/uml-editor-${{ matrix.os }}.jar

      - name: Debug Build Output
        run: ls -l target/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}
          path: target/*.jar

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-ubuntu-latest
          path: ./target/

      - name: Create Release
        id: create_release
        uses: actions/github-script@v6
        with:
          script: |
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v4.4.${{ github.run_number }}`,
              name: "UML Editor Release",
              body: "Automatically generated release.",
              prerelease: false,
              draft: false,
            });
            core.setOutput("upload_url", release.data.upload_url);

      - name: Upload JAR to Release
        run: |
          for jar in ./target/*.jar; do
            echo "Uploading $jar..."
            curl -X POST \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/java-archive" \
              --data-binary @"$jar" \
              "${{ steps.create_release.outputs.upload_url }}?name=$(basename "$jar")"
          done

  check-code-coverage:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up GraalVM JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21.0.5'
          distribution: 'graalvm'

      - name: Install xmllint
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils

      - name: Generate Code Coverage Report
        run: |
          mvn jacoco:prepare-agent test jacoco:report
        shell: bash

      - name: Verify Code Coverage for Model Classes
        run: |
          COVERAGE=$(xmllint --xpath "string(//package[@name='org.project.Model']/counter[@type='INSTRUCTION']/@covered)" target/site/jacoco/jacoco.xml)
          MISSED=$(xmllint --xpath "string(//package[@name='org.project.Model']/counter[@type='INSTRUCTION']/@missed)" target/site/jacoco/jacoco.xml)
          TOTAL=$((COVERAGE + MISSED))
          PERCENT=$((COVERAGE * 100 / TOTAL))
          echo "Coverage: $PERCENT%"
          if [ $PERCENT -lt 90 ]; then
            echo "Code coverage is below 90% for org.project.Model. Current: $PERCENT%"
            exit 1
          else
            echo "Code coverage is above 90% for org.project.Model. Current: $PERCENT%"
          fi

      - name: Upload Code Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: target/site/jacoco/
