name: Java Continuous Integration with Maven (GraalVM)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up GraalVM JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21.0.5'
          distribution: 'graalvm'
          cache: maven

      - name: Run Clean, Package, Install
        run: |
          mvn clean package install -B
          if [ ! -f target/original-uml-editor-shaded.jar ]; then
            echo "Shaded JAR file not found! Build failed."
            exit 1
          fi

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shaded-jar
          path: target/original-uml-editor-shaded.jar

  release:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: shaded-jar

      - name: Determine Release Type
        id: determine_release
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "release_type=release" >> $GITHUB_ENV
            echo "prerelease=false" >> $GITHUB_ENV
          else
            echo "release_type=pre-release" >> $GITHUB_ENV
            echo "prerelease=true" >> $GITHUB_ENV
          fi

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: v4.4.${{ github.run_number }}
          name: UML Editor ${{ env.release_type }}
          body: |
            Automatically generated ${{ env.release_type }} for UML Editor.
          prerelease: ${{ env.prerelease }}
          draft: false
          artifacts: |
            target/original-uml-editor-shaded.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip Source Code
        run: |
          zip -r source-code.zip .

      - name: Upload Source Code
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: source-code.zip
          asset_name: source-code.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-code-coverage:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up GraalVM JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21.0.5'
          distribution: 'graalvm'

      - name: Install xmllint
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils

      - name: Generate Code Coverage Report
        run: |
          mvn jacoco:prepare-agent test jacoco:report
        shell: bash

      - name: Verify Code Coverage for Model Classes
        run: |
          COVERAGE=$(xmllint --xpath "string(//package[@name='org.project.Model']/counter[@type='INSTRUCTION']/@covered)" target/site/jacoco/jacoco.xml)
          MISSED=$(xmllint --xpath "string(//package[@name='org.project.Model']/counter[@type='INSTRUCTION']/@missed)" target/site/jacoco/jacoco.xml)
          TOTAL=$((COVERAGE + MISSED))
          PERCENT=$((COVERAGE * 100 / TOTAL))
          echo "Coverage: $PERCENT%"
          if [ $PERCENT -lt 90 ]; then
            echo "Code coverage is below 90% for org.project.Model. Current: $PERCENT%"
            exit 1
          else
            echo "Code coverage is above 90% for org.project.Model. Current: $PERCENT%"
          fi

      - name: Upload Code Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: target/site/jacoco/
